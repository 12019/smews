/* T (p a b G n h) Recommended Parameters for secp256r1 SEC2 */

/* P is a prime which is odd SEC2
#define ECC_PARAM_P FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
#define ECC_PARAM_A FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
#define ECC_PARAM_B 5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
#define ECC_PARAM_Gx 6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
#define ECC_PARAM_Gy 4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
#define ECC_PARAM_N FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551
#define ECC_PARAM_COFACTOR 01
*/

#include "ecc.h"

/* Prime Modulus already transformed in LSB to MSB */
const uint32_t modulus[] = {
	0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0,0,0,
	0x00000001,0xFFFFFFFF
};


/*
 constant field for modulus in big-endian order
static uint8_t ec_p_256[] = {
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	//FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
};

 A parameter of the curve which is equal to modulus - 3 (special NIST curve)
static uint8_t ec_a_256[] = {
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC
	};

 B parameter of the curve
static uint8_t ec_b_256[] = {
	0x5A,0xC6,0x35,0xD8,0xAA,0x3A,0x93,0xE7,0xB3,0xEB,0xBD,0x55,
	0x76,0x98,0x86,0xBC,0x65,0x1D,0x06,0xB0,0xCC,0x53,0xB0,0xF6,
	0x3B,0xCE,0x3C,0x3E,0x27,0xD2,0x60,0x4B
	};

 Base Point X Coordinate
static uint8_t ec_base_X[] = {
	0x6B,0x17,0xD1,0xF2,0xE1,0x2C,0x42,0x47,0xF8,0xBC,0xE6,0xE5,
	0x63,0xA4,0x40,0xF2,0x77,0x03,0x7D,0x81,0x2D,0xEB,0x33,0xA0,
	0xF4,0xA1,0x39,0x45,0xD8,0x98,0xC2,0x96
};

 Base Point Y Coordinate
static uint8_t ec_base_Y[] = {

	0x4F,0xE3,0x42,
	0xE2,0xFE,0x1A,0x7F,0x9B,0x8E,0xE7,0xEB,0x4A,0x7C,0x0F,0x9E,
	0x16,0x2B,0xCE,0x33,0x57,0x6B,0x31,0x5E,0xCE,0xCB,0xB6,0x40,
	0x68,0x37,0xBF,0x51,0xF5
};

 order n of the curve
static uint8_t ec_order_256[] = {
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
	0xFF,0xFF,0xFF,0xFF,0xBC,0xE6,0xFA,0xAD,0xA7,0x17,0x9E,0x84,
	0xF3,0xB9,0xCA,0xC2,0xFC,0x63,0x25,0x51
	};

 cofactor
static uint8_t ec_cofactor_256[] = {
	0x01
	};


*/
